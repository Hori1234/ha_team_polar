<?xml version="1.0"?>
<robot
	xmlns:xacro="http://www.ros.org/wiki/xacro" name="polar_prototype">
	<xacro:property name="frame_height" value="0.35" />
	<xacro:property name="wheel_radius" value="0.3" />
	<xacro:property name="wheel_length" value="0.25" />
	<xacro:property name="mm_to_m" value="0.001 0.001 0.001" />
	<xacro:property name="frame_mass" value="400"/>
	<xacro:property name="motor_mass" value="0"/>
	<xacro:property name="wheel_mass" value="20"/>
	<xacro:property name="gearing_mass" value="0"/>
	<xacro:property name="mu1" value="1"/>
	<xacro:property name="mu2" value="1"/>
	<xacro:arg name="robot_name" default="polar_prototype" />
	<!--<xacro:macro name="default_inertial" params="mass *origin">
		<inertial>
			<xacro:insert_block name="origin"/>
			<mass value="${mass}" />
			<inertia
			ixx="1.0" ixy="0.0" ixz="0.0"
			iyy="1.0" iyz="0.0"
			izz="1.0" />
		</inertial>
	</xacro:macro>
	<xacro:base_origin name="base_origin">
		<origin rpy="0 0 0" xyz="0 0 ${frame_height}"/>
	</xacro:base_origin>
	-->
	<!-- <link name="dummy_link"/>
	<joint name="dummy_to_base" type="fixed">
		<parent link="dummy_link"/>
		<child link="base_link"/>
		<origin xyz="0 0 0"/>
    </joint>-->
	<!--<link name="world"/>
	<joint name="intheair" type="fixed">
		<parent link="world"/>
		<child link="dummy_link"/>
		<origin xyz="0 0 5"/>
    </joint> -->

	<link name="base_link">
		<origin rpy="0 0 0" xyz="0 0 ${frame_height}"/>
		<visual>
			<origin rpy="0.0 ${pi} 0" xyz="0 0 0"/>
			<geometry>
				<mesh filename="package://polar_prototype_description/meshes/Frame_Ultra_Low_Res.stl"  scale="${mm_to_m}"/>
			</geometry>
			<material name="Grey"/>
		</visual>	
		<collision>
			<origin rpy="0 0 0" xyz="0 0 ${frame_height-0.1}"/>
			<geometry>
				<box size="0.8 1.12 0.8"/>
			</geometry>
		</collision>
		<inertial>
			<origin rpy="0 0 0" xyz="0 0 ${frame_height-0.1}"/>
			<mass value="${frame_mass}" />
			<inertia
			ixx="61.7909" ixy="-0.0052642" ixz="-0.140378"
			iyy="33.5574" iyz="-0.187756"
			izz="78.3748" />
		</inertial>
	</link>
	<link name="motors">
		<visual>
			<origin rpy="0.0 ${pi} 0" xyz="0 0 0"/>
			<geometry>
				<mesh filename="package://polar_prototype_description/meshes/Motors_Ultra_Low_Res.stl"  scale="${mm_to_m}"/>
			</geometry>
			<material name="Red"/>
		</visual>
		<inertial>
			<origin rpy="0.0 ${pi} 0" xyz="0 0 0"/>
			<mass value="${motor_mass}" />
			<inertia
			ixx="0" ixy="0.0" ixz="0.0"
			iyy="0" iyz="0.0"
			izz="0" />
		</inertial>
	</link>
	<link name="gearing">
		<visual>
			<origin rpy="0.0 ${pi} 0" xyz="0 0 0"/>
			<geometry>
				<mesh filename="package://polar_prototype_description/meshes/Chains_Ultra_Low_Res.stl"  scale="${mm_to_m}"/>
			</geometry>
			<material name="DarkGrey"/>
		</visual>
		<inertial>
			<origin rpy="0.0 0 0" xyz="0 0 0"/>
			<mass value="1" />
			<inertia
			ixx="0.0" ixy="0.0" ixz="0.0"
			iyy="0.0" iyz="0.0"
			izz="0.0" />
		</inertial>
	</link>
	<link name="wheel_FR">
		<visual>
			<origin rpy="0.0 ${pi} 0" xyz="0.555 0.519 -0.065"/>
			<geometry>
				<mesh filename="package://polar_prototype_description/meshes/Wheel_Ultra_Low_Res.stl"  scale="${mm_to_m}"/>
			</geometry>
			<material name="Black"/>
		</visual>
		<collision>
			<origin rpy="0 ${pi/2} 0" xyz="0 0 0"/>
			<geometry>
				<cylinder radius="${wheel_radius}" length="${wheel_length}"/>
			</geometry>
		</collision>
		<inertial>
			<origin rpy="0.0 0 0" xyz="0 0 0"/>
			<mass value="${wheel_mass}" />
			<inertia
			ixx="0.826347" ixy="0.0" ixz="0.0"
			iyy="0.4882235" iyz="0.0"
			izz="0.4882235" />
		</inertial>
	</link>
	<link name="wheel_FL">
		<visual>
			<origin rpy="0.0 ${pi} 0" xyz="0.555 0.519 -0.065"/>
			<geometry>
				<mesh filename="package://polar_prototype_description/meshes/Wheel_Ultra_Low_Res.stl"  scale="${mm_to_m}"/>
			</geometry>
			<material name="Black">
				<color rgba="0.1 0.1 0.1 1"/>
			</material>
		</visual>
		<collision>
			<origin rpy="0 ${pi/2} 0" xyz="0 0 0"/>
			<geometry>
				<cylinder radius="${wheel_radius}" length="${wheel_length}"/>
			</geometry>
		</collision>
		<inertial>
			<origin rpy="0.0 0 0" xyz="0 0 0"/>
			<mass value="${wheel_mass}" />
			<inertia
			ixx="0.826347" ixy="0.0" ixz="0.0"
			iyy="0.4882235" iyz="0.0"
			izz="0.4882235" />
		</inertial>
	</link>
	<link name="wheel_RL">
		<visual>
			<origin rpy="0.0 ${pi} 0" xyz="0.555 0.519 -0.065"/>
			<geometry>
				<mesh filename="package://polar_prototype_description/meshes/Wheel_Ultra_Low_Res.stl"  scale="${mm_to_m}"/>
			</geometry>
			<material name="Black">
				<color rgba="0.1 0.1 0.1 1.0"/>
			</material>
		</visual>
		<collision>
			<origin rpy="0 ${pi/2} 0" xyz="0 0 0"/>
			<geometry>
				<cylinder radius="${wheel_radius}" length="${wheel_length}"/>
			</geometry>
		</collision>
		<inertial>
			<origin rpy="0.0 0 0" xyz="0 0 0"/>
			<mass value="${wheel_mass}" />
			<inertia
			ixx="0.826347" ixy="0.0" ixz="0.0"
			iyy="0.4882235" iyz="0.0"
			izz="0.4882235" />
		</inertial>
	</link>
	<link name="wheel_RR">
		<visual>
			<origin rpy="0.0 ${pi} 0" xyz="0.555 0.519 -0.065"/>
			<geometry>
				<mesh filename="package://polar_prototype_description/meshes/Wheel_Ultra_Low_Res.stl"  scale="${mm_to_m}"/>
			</geometry>
			<material name="Black">
				<color rgba="0.1 0.1 0.1 1.0"/>
			</material>
		</visual>
		<collision>
			<origin rpy="0 ${pi/2} 0" xyz="0 0 0"/>
			<geometry>
				<cylinder radius="${wheel_radius}" length="${wheel_length}"/>
			</geometry>
		</collision>
		<inertial>
			<origin rpy="0.0 0 0" xyz="0 0 0"/>
			<mass value="${wheel_mass}" />
			<inertia
			ixx="0.826347" ixy="0.0" ixz="0.0"
			iyy="0.4882235" iyz="0.0"
			izz="0.4882235" />
		</inertial>
	</link>
	<joint name="base_to_motors" type="fixed">
		<origin xyz="0 0 0" rpy="0 0 0"/>
		<parent link="base_link"/>
		<child link="motors"/>
	</joint>
	<joint name="base_to_gearing" type="fixed">
		<origin xyz="0 0 0" rpy="0 0 0"/>
		<parent link="base_link"/>
		<child link="gearing"/>
	</joint>
	<joint name="base_to_wheel_FR" type="continuous">
		<origin xyz="0.555 0.519 0.065" rpy="0 0 0"/>
		<parent link="base_link"/>
		<child link="wheel_FR"/>
		<axis xyz="1 0 0" />
	</joint>
	<joint name="base_to_wheel_FL" type="continuous">
		<origin xyz="-0.555 0.519 0.065" rpy="0 0 0"/>
		<parent link="base_link"/>
		<child link="wheel_FL"/>
		<axis xyz="1 0 0" />
	</joint>
	<joint name="base_to_wheel_RR" type="continuous">
		<origin xyz="0.555 -0.519 0.065" rpy="0 0 0"/>
		<parent link="base_link"/>
		<child link="wheel_RR"/>
		<axis xyz="1 0 0" />
	</joint>
	<joint name="base_to_wheel_RL" type="continuous">
		<origin xyz="-0.555 -0.519 0.065" rpy="0 0 0"/>
		<parent link="base_link"/>
		<child link="wheel_RL"/>
		<axis xyz="1 0 0" />
	</joint>

    <!-- <transmission name="RR_transmission">
    	<type>transmission_interface/SimpleTransmission</type>
    	<joint name="base_to_wheel_RR">
      		<hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    	</joint>
    	<actuator name="motor_RR">
      		<hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      		<mechanicalReduction>1</mechanicalReduction>
    	</actuator>
  	</transmission>

	<transmission name="FR_transmission">
		<type>transmission_interface/SimpleTransmission</type>
		<joint name="base_to_wheel_FR">
			<hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
		</joint>
		<actuator name="motor_FR">
			<hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
			<mechanicalReduction>1</mechanicalReduction>
		</actuator>
	</transmission>

	<transmission name="FL_transmission">
    	<type>transmission_interface/SimpleTransmission</type>
    	<joint name="base_to_wheel_FL">
      		<hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    	</joint>
    	<actuator name="motor_FL">
      		<hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      		<mechanicalReduction>1</mechanicalReduction>
    	</actuator>
  	</transmission>

	<transmission name="RL_transmission">
    	<type>transmission_interface/SimpleTransmission</type>
		<joint name="base_to_wheel_RL">
      		<hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    	</joint>
    	<actuator name="motor_RL">
      		<hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      		<mechanicalReduction>1</mechanicalReduction>
    	</actuator>
  	</transmission> -->
	  
	<material name="Grey">
		<color rgba="0.8 0.8 0.8 1"/>
	</material>
	<material name="Red">
		<color rgba="1 0 0 1"/>
	</material>
	<material name="DarkGrey">
		<color rgba="0.5 0.5 0.5 1"/>
	</material>
	<material name="Black">
		<color rgba="0.1 0.1 0.1 1"/>
	</material>
	<link name="imu_link">
		<visual>
			<origin rpy="0.0 ${pi} 0" xyz="0 0 0"/>
			<geometry>
				<box size="0.1 0.1 0.1"/>
			</geometry>
			<material name="Red"/>
		</visual>
		<inertial>
			<origin rpy="0 0 0" xyz="0 0 0"/>
			<mass value="0.1" />
			<inertia
			ixx="0" ixy="0.0" ixz="0.0"
			iyy="0" iyz="0.0"
			izz="0" />
		</inertial>
	</link>
	<joint name="base_to_imu" type="fixed">
		<origin xyz="0 0 0" rpy="0 0 0"/>
		<parent link="base_link"/>
		<child link="imu_link"/>
	</joint>
	<link name="gps_link">
		<visual>
			<origin rpy="0.0 ${pi} 0" xyz="0 0 0"/>
			<geometry>
				<box size="0.1 0.1 0.1"/>
			</geometry>
			<material name="Red"/>
		</visual>
		<inertial>
			<origin rpy="0 0 0" xyz="0 0 0"/>
			<mass value="0.1" />
			<inertia
			ixx="0" ixy="0.0" ixz="0.0"
			iyy="0" iyz="0.0"
			izz="0" />
		</inertial>
	</link>
	<joint name="base_to_gps" type="fixed">
		<origin xyz="0 0 0" rpy="0 0 0"/>
		<parent link="base_link"/>
		<child link="gps_link"/>
	</joint>

	<!--Plugins-->
	<!-- <gazebo>
		<plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
		<robotNamespace>/$(arg robot_name)</robotNamespace>
		<robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
		</plugin>
	</gazebo> -->
	<gazebo reference="motors">
    	<material>Gazebo/Orange</material>
  	</gazebo>
	<gazebo reference="gearing">
    	<material>Gazebo/Grey</material>
  	</gazebo>
	<gazebo reference="wheel_FR">
		<kp>1000000.0</kp> <!-- kp and kd for rubber -->
		<kd>100.0</kd>
		<mu1>${mu1}</mu1> <!-- was 10 -->
		<mu2>${mu2}</mu2>
		<!-- how to get these into <surface><friction><ode>... ?
			slip1 0.5 /slip1 
			slip2 0 /slip2 
		-->
		<!-- fdir1 0 1 0 /fdir1 --> <!-- see http://github.com/MobileRobots/amr-ros-config/issues/6 -->
		<fdir1> 1 0 0 </fdir1>
		<maxVel>1.0</maxVel>
		<minDepth>0.00</minDepth>
    	<material>Gazebo/Blue</material>
  	</gazebo>
	<gazebo reference="wheel_FL">
		<kp>1000000.0</kp> <!-- kp and kd for rubber -->
		<kd>100.0</kd>
		<mu1>${mu1}</mu1> <!-- was 10 -->
		<mu2>${mu2}</mu2>
		<!-- how to get these into <surface><friction><ode>... ?
			slip1 0.5 /slip1 
			slip2 0 /slip2 
		-->
		<fdir1> 1 0 0 </fdir1> <!-- see http://github.com/MobileRobots/amr-ros-config/issues/6 -->
		<maxVel>1.0</maxVel>
		<minDepth>0.00</minDepth>
    	<material>Gazebo/Blue</material>
  	</gazebo>
	<gazebo reference="wheel_RR">
		<kp>1000000.0</kp> <!-- kp and kd for rubber -->
		<kd>100.0</kd>
		<mu1>${mu1}</mu1> <!-- was 10 -->
		<mu2>${mu2}</mu2>
		<!-- how to get these into <surface><friction><ode>... ?
			slip1 0.5 /slip1 
			slip2 0 /slip2 
		-->
		<!-- fdir1 0 1 0 /fdir1 --> <!-- see http://github.com/MobileRobots/amr-ros-config/issues/6 -->
		<fdir1> 1 0 0 </fdir1>
		<maxVel>1.0</maxVel>
		<minDepth>0.00</minDepth>
    	<material>Gazebo/Blue</material>
  	</gazebo>
	<gazebo reference="wheel_RL">
		<kp>1000000.0</kp> <!-- kp and kd for rubber -->
		<kd>100.0</kd>
		<mu1>${mu1}</mu1> <!-- was 10 -->
		<mu2>${mu2}</mu2>
		<!-- how to get these into <surface><friction><ode>... ?
			slip1 0.5 /slip1 
			slip2 0 /slip2 
		-->
		<!-- fdir1 0 1 0 /fdir1 --> <!-- see http://github.com/MobileRobots/amr-ros-config/issues/6 -->
		<fdir1> 1 0 0 </fdir1>
		<maxVel>1.0</maxVel>
		<minDepth>0.00</minDepth>
    	<material>Gazebo/Blue</material>
  	</gazebo>

	<gazebo>
		<plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
			<updateRate>100.0</updateRate>
			<robotNamespace>/</robotNamespace>
			<leftFrontJoint>base_to_wheel_FL</leftFrontJoint>
			<rightFrontJoint>base_to_wheel_FR</rightFrontJoint>
			<leftRearJoint>base_to_wheel_RL</leftRearJoint>
			<rightRearJoint>base_to_wheel_RR</rightRearJoint>
			<wheelSeparation>${0.555*2}</wheelSeparation>
			<wheelDiameter>${wheel_radius*2}</wheelDiameter>
			<robotBaseFrame>base_link</robotBaseFrame>
			<torque>2000</torque>
			<commandTopic>polar_prototype/cmd_vel</commandTopic>
			<broadcastTF>false</broadcastTF>
		</plugin>
	</gazebo>
	<gazebo>
  		<plugin name="imu_plugin" filename="libgazebo_ros_imu.so">
  			<alwaysOn>true</alwaysOn>
			<robotBaseFrame>base_link</robotBaseFrame>
  			<bodyName>imu_link</bodyName>
  			<topicName>/imu/data</topicName>
  			<serviceName>imu_service</serviceName>
  			<gaussianNoise>0.2</gaussianNoise>
  			<updateRate>20.0</updateRate>
		</plugin>
  	</gazebo>
	<gazebo>
		<plugin name="gazebo_ros_gps" filename="libhector_gazebo_ros_gps.so">
            <updateRate>0.5</updateRate>
            <bodyName>gps_link</bodyName>
			<robotBaseFrame>base_link</robotBaseFrame>
			<frameId>base_link</frameId>
            <topicName>/gps/fix</topicName>
            <velocityTopicName>/gps/fix_velocity</velocityTopicName>
            <referenceLatitude>0.00000000</referenceLatitude>
            <referenceLongitude>0.00000000</referenceLongitude>
            <referenceHeading>0.00000000</referenceHeading>
            <referenceAltitude>0.00000000</referenceAltitude>
            <offset>0 0 0</offset>
            <drift>0.01 0.01 0.0</drift>
            <gaussianNoise>0.05 0.05 0.0</gaussianNoise>
            <velocityDrift>0.01 0.01 0.0</velocityDrift>
            <velocityGaussianNoise>0.5 0.5 0.</velocityGaussianNoise>
        </plugin>
	</gazebo>
</robot>
